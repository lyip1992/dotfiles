snippet #! "shebang" w
#!/usr/bin/env node$0
endsnippet

snippet kf "Objects Method" w
${1:methodName}: function(${2:attribute}){
	$3
}${4:,}$0
endsnippet

snippet kv "Object key: value" w
${1:key}: ${2:value}${4:,}$0
endsnippet

snippet proto "prototype" w
${1:ClassName}.prototype.${2:methodName} = function($3){
	$4
};$0
endsnippet

snippet do "do-while" w
do {
	$2
} while(${1:true});$0
endsnippet

snippet if "if" w
if( ${1:true} ){
	$2
}$0
endsnippet

snippet ife "if-else" w
if( ${1:true} ){
	$2
} else {
	$3
}$0
endsnippet

snippet else "else"
else {
	$1
}
endsnippet

snippet elseif "else-if"
else if( ${1:true} ){
	$2
}$0
endsnippet

snippet for "for" w
for( var ${1:i} = 0; ${2:array} < $2.length; $1++ ){
	$2[$1];$3
}$0
endsnippet

snippet forin "for-in" w
for( var ${1:variable} in ${2:object} ){
	$2[$1];$3
}$0
endsnippet

snippet forof "for-of" w
for( ${1:variable} of ${2:iterable} ){
	$3
}$0
endsnippet

snippet fun "Function" w
var ${1:functionName} = function($2){
	$3
};$0
endsnippet

snippet func "Anonymous Function"
function($1){
	$2
}$0
endsnippet

snippet gen "Generator" w
function* ${1:functionName}($2){
	$3
}$0
endsnippet

snippet gene "Anonymous Generator"
function* (){
	$2
}$0
endsnippet

snippet get "getElementsByClassName"
window.getElementsByClassName('${2:className}')$0
endsnippet

snippet getn "GetElementsByName"
window.getElementsByName('${1:name}')$0
endsnippet

snippet gett "GetElementsByTagName"
window.getElementsByTagName('${1:tagName}')$0
endsnippet

snippet gete "GetElementById"
window.getElementById('${1:id}')$0
endsnippet

snippet qs "querySelector"
window.querySelector('${1:query}')$0
endsnippet

snippet qsa "querySelectorAll"
window.querySelectorAll('${2:query}')$0
endsnippet

snippet iife "Immediately-Invoked Function Expression" w
(function(){
	${1:'use strict';}$2
}());$0
endsnippet

snippet log "log" w
console.log($1);$0
endsnippet

snippet warn "warn" w
console.warn($1);$0
endsnippet

snippet error "error" w
console.error($1);$0
endsnippet

snippet inspect "inspect" w
console.log(require('util').inspect(${1:inspectee}, { depth: null }));$0
endsnippet

snippet prom "new Promise"
new Promise(function(resolve, reject){
	$1
});$0
endsnippet

snippet interval "setInterval function" w
setInterval(${2:function(){
	$3
}}, ${1:10});$0
endsnippet

snippet timeout "setTimeout function" w
setTimeout(${2:function(){
	$3
}}, ${1:10});$0
endsnippet

snippet switch "switch" w
switch(${1:expression}){
	case ${2:expression}:
		$3
		break;$4

	default:
		$5
}$0
endsnippet

snippet case "case"
case ${1:expression}:
	$2
	break;$0
endsnippet

snippet try "try" w
try {
	$1
} catch( ${2:err} ){
	$3
}${4: finally {
	$5
}}$0
endsnippet

snippet while "while" w
while( ${1:true} ){
	$2
}$0
endsnippet

snippet /** "Start DocBlock" w
/**
 * $1
 */$0
endsnippet

snippet req "CommonJS Require" w
var ${2:$1} = require('${1:module}')$3;$0
endsnippet

snippet export "module.exports" w
module.exports = ${1};$0
endsnippet

snippet class "Class" w
class ${1:ClassName} {
	constructor($2){
		$3
	}$4
}$0
endsnippet
